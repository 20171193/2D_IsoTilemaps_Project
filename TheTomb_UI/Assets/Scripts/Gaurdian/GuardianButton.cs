using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;

public class GuardianButton : MonoBehaviour, IPointerDownHandler, IPointerUpHandler
{
    [SerializeField]
    private GameObject guardianTile;    // 가디언 배치를 위한 타일맵
    [SerializeField]
    private GameObject guardianPrefab;  // 이미지 해당 프리팹
    [SerializeField]
    private GameObject[] onObjects;    // 가디언 배치 후 다른 기능들 true
    [SerializeField]
    private GameObject[] offObjects;    // 가디언 배치 시 다른 기능들 false
    [SerializeField]
    private Image guardianImage;        // 해당 가디언 이미지
    [SerializeField]
    private GameObject guardianInfoImage;   // 배치하고자하는 가디언 미리보기




    private DeploymentGuardian dpGuardian;

    private BasicCameraFollow camera;


    // Start is called before the first frame update
    void Awake()
    {
        dpGuardian = GameObject.Find("DeploymentGuardian").GetComponent<DeploymentGuardian>();
        camera = GameObject.Find("MainCamera").GetComponent<BasicCameraFollow>();
    }

    // Update is called once per frame
    void Update()
    {
        
    }
    public void OnPointerDown(PointerEventData ped)
    {
        // 버튼 클릭 효과
        transform.localScale = new Vector3(1.2f, 1.2f, 1);
    }
    public void OnPointerUp(PointerEventData ped)
    {
        // 버튼 클릭 효과
        transform.localScale = new Vector3(1, 1, 1);

        // 배치 중 다른 기능들 활성화/비 활성화
        for (int i = 0; i < onObjects.Length; i++)
        {
            onObjects[i].SetActive(true);
        }
        for (int i = 0; i < offObjects.Length; i++)
        {
            offObjects[i].SetActive(false);
        }
        // 카메라 위치 초기화
        camera.isDeploy = true;
        // 배치할 가디언 프리팹 저장
        dpGuardian.deployPrefab = guardianPrefab;
        guardianInfoImage.GetComponent<Image>().sprite = guardianImage.sprite;
    }
}
